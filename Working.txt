                                                         $ ----------- ( Encoding Text to Image ) ----------- $

#______________________________________________________________________________________________________________________________________________________________________________________#
#                                                                                                                                                                                      #
#                                                                         ---- [ Workflow ] ----                                                                                       #
#______________________________________________________________________________________________________________________________________________________________________________________#

1) User Input: The user can input text directly or upload a text file.

2) Text Processing: The text is read from the input or file.

3) Chunking Text: The text is split into chunks where each chunk size is limited by the maximum image size squared (MAX_IMAGE_SIZE^2). 
This ensures each image can hold a reasonable amount of text.

4) Image Creation: Each chunk of text is converted into a grayscale image:

  Calculate the number of pixels required based on the text length.
  Determine the image width and height.
  Create a blank image with the calculated dimensions.
  Populate the image pixels with the ASCII values of the characters in the text chunk.

5) Saving Images: The resulting images are saved in a specified directory.
  
  Example:
  --------
  
  Text Input: "Hello"
    Image Size Calculation: 5 characters, thus 5 pixels needed. An image of 5x1 is created.
    ASCII Values: H (72), e (101), l (108), l (108), o (111)
  
  Image Pixels:
    | 72 | 101 | 108 | 108 | 111 |

6) Decoding Image to Text : The user uploads one or more encoded images.

  Image Processing: Each uploaded image is processed , Read the image as a grayscale image . Extract the pixel values and convert them back to characters.
  
  Text Reconstruction: Combine the decoded text from all images.
  Saving Text: The resulting text is saved to a file.
  
  Example:
  --------
  
  Image Pixels:
    | 72 | 101 | 108 | 108 | 111 |
  
  Decoded Text: 
    H (72), e (101), l (108), l (108), o (111) -> "Hello"

#______________________________________________________________________________________________________________________________________________________________________________________#
#                                                                                                                                                                                      #
#                                                                         ---- [ Functions ] ----                                                                                      #
#______________________________________________________________________________________________________________________________________________________________________________________#
                                                                                                    
1) encode_text_to_image(text): Converts text to an image:

  Computes image dimensions.
  Fills an image array with ASCII values of characters.

2) split_text_into_chunks(text, chunk_size): Splits text into chunks of specified size.

3) encode_text_file_to_images(input_text, input_file_path): Manages the entire encoding process:

  Reads text from input or file.
  Splits text into chunks.
  Encodes each chunk into an image.
  Saves images and returns their paths.

4) decode_image_to_text(encoded_img): Converts an image back to text:
  
  Flattens the image.
  Converts pixel values to characters.

5) decode_image_file_to_text(input_image_paths): Manages the entire decoding process:

  Reads and decodes each image.
  Combines decoded texts.
  Saves the final text to a file and returns the path.

6) allowed_file(filename): Checks if a file has an allowed extension.

#======================================================================================================================================================================================#
